<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Services</title>
  <!-- Font Awesome -->
  <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
  />
  <!-- Bootstrap -->
  <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
  />
  <!-- Custom CSS -->
  <link rel="stylesheet" href="/css/shop.css" />
  <link rel="stylesheet" href="/css/style.css" />
</head>
<body>

  <header><%- include('./components/nav.ejs') %></header>

  <script>
  // Expose signed-in user id (empty string if anon)
  window.USER_ID = "<%= user ? user._id : '' %>";
  </script>


  <main class="py-4">
    <%- include('./cart.ejs') %>

    <div class="container">
      <% if (services && services.length > 0) { %>
        <!-- Filter Buttons -->
        <div class="row mt-5" id="filter-buttons">
          <div class="col-12">
            <button class="btn mb-2 me-1 active" data-filter="all">Show all</button>
            <% 
              const types = services.reduce((acc, svc) => {
                if (!acc.includes(svc.type)) acc.push(svc.type);
                return acc;
              }, []);
              types.forEach(type => { 
            %>
              <button class="btn mb-2 mx-1" data-filter="<%= type %>">
                <%= type %>
              </button>
            <% }) %>
          </div>
        </div>

        <!-- Service Cards -->
        <div class="row px-2 mt-4" id="filterable-cards">
          <% services.forEach(service => { %>
            <div
              class="col-md-4 col-sm-6 mb-4 filter-item"
              data-type="<%= service.type %>"
            >
              <div class="card p-0">
                <img src="<%= service.images[0] %>" alt="<%= service.title %>" class="card-img-top" />
                <div class="card-body">
                  <h6 class="card-title"><%= service.title %></h6>
                  <p class="card-text"><%= service.price %> <i class="fa-solid fa-dollar-sign"></i></p>
                  <button
                    onclick="addToCart(this, 'service')"
                    data-id="<%= service._id %>"
                    class="btn btn-primary"
                    >
                    Add to cart
                  </button>
                </div>
              </div>
            </div>
          <% }); %>
        </div>

      <% } else { %>
        <div class="row">
          <div class="col-12">
            <p class="p-5">No services available.</p>
          </div>
        </div>
      <% } %>
    </div>
  </main>

  <%- include('./components/footer.ejs') %>

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      // Filter logic
      const filterButtons = document.querySelectorAll("#filter-buttons button");
      const filterItems   = document.querySelectorAll(".filter-item");

      filterButtons.forEach(button => {
        button.addEventListener('click', function () {
          const filterValue = this.dataset.filter;
          filterItems.forEach(item => {
            if (filterValue === 'all' || item.dataset.type === filterValue) {
              item.classList.remove('d-none');
              item.classList.add('d-block');
            } else {
              item.classList.remove('d-block');
              item.classList.add('d-none');
            }
          });
          // Update active button
          filterButtons.forEach(btn => btn.classList.remove('active'));
          this.classList.add('active');
        });
      });
    });

    function addToCart(el, type) {
      const userId = window.USER_ID;
      if (!userId) {
        alert("Please sign in to add items to your cart.");
        return window.location.href = "/signin";
      }

      const id = el.getAttribute("data-id");
      const payload = type === "service"
        ? { serviceId: id, serviceQuantity: 1 }
        : { productId: id,  productQuantity: 1 };

      fetch(`/user/${userId}/cart`, {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload)
      })
      .then(res => {
        if (!res.ok) throw new Error("Network response was not ok");
        return res.json();
      })
      .then(() => {
        window.location.reload();
      })
      .catch(err => {
        alert("Error updating cart: " + err.message);
      });
    }
  </script>
</body>
</html>
